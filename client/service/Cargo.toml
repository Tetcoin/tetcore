[package]
name = "tc-service"
version = "0.8.1"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://github.com/tetcoin/tetcore"
repository = "https://github.com/tetcoin/tetcore/"
description = "Tetcore service. Starts a thread that spins up the network, client, and extrinsic pool. Manages communication between them."
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[features]
default = ["db"]
# The RocksDB feature activates the RocksDB database backend. If it is not activated, and you pass
# a path to a database, an error will be produced at runtime.
db = ["tc-client-db/with-kvdb-rocksdb", "tc-client-db/with-tetsy-db"]
wasmtime = [
	"tc-executor/wasmtime",
]
# exposes the client type
test-helpers = []

[dependencies]
thiserror = "1.0.21"
futures01 = { package = "futures", version = "0.1.29" }
futures = { version = "0.3.4", features = ["compat"] }
jsonrpc-pubsub = "15.1"
jsonrpc-core = "15.1"
rand = "0.7.3"
parking_lot = "0.11.1"
lazy_static = "1.4.0"
log = "0.4.11"
futures-timer = "3.0.1"
wasm-timer = "0.2"
tetsy-exit-future = "0.2.0"
pin-project = "0.4.8"
hash-db = "0.15.2"
serde = "1.0.101"
serde_json = "1.0.41"
tc-keystore = { version = "2.0.0", path = "../keystore" }
tp-io = { version = "2.0.0", path = "../../primitives/io" }
tp-runtime = { version = "2.0.0", path = "../../primitives/runtime" }
tp-trie = { version = "2.0.0", path = "../../primitives/trie" }
tp-externalities = { version = "0.8.0", path = "../../primitives/externalities" }
tp-utils = { version = "2.0.0", path = "../../primitives/utils" }
tp-version = { version = "2.0.0", path = "../../primitives/version" }
tp-blockchain = { version = "2.0.0", path = "../../primitives/blockchain" }
tp-core = { version = "2.0.0", path = "../../primitives/core" }
tp-keystore = { version = "0.8.0", path = "../../primitives/keystore" }
tp-session = { version = "2.0.0", path = "../../primitives/session" }
tp-state-machine = { version = "0.8.0", path = "../../primitives/state-machine" }
tp-application-crypto = { version = "2.0.0", path = "../../primitives/application-crypto" }
tp-consensus = { version = "0.8.0", path = "../../primitives/consensus/common" }
tp-inherents = { version = "2.0.0", path = "../../primitives/inherents" }
tc-network = { version = "0.8.0", path = "../network" }
tc-chain-spec = { version = "2.0.0", path = "../chain-spec" }
tc-light = { version = "2.0.0", path = "../light" }
tc-client-api = { version = "2.0.0", path = "../api" }
tp-api = { version = "2.0.0", path = "../../primitives/api" }
tc-client-db = { version = "0.8.0", default-features = false, path = "../db" }
codec = { package = "tetsy-scale-codec", version = "2.0.0" }
tc-executor = { version = "0.8.0", path = "../executor" }
tc-transaction-pool = { version = "2.0.0", path = "../transaction-pool" }
tp-transaction-pool = { version = "2.0.0", path = "../../primitives/transaction-pool" }
tc-rpc-server = { version = "2.0.0", path = "../rpc-servers" }
tc-rpc = { version = "2.0.0", path = "../rpc" }
tc-block-builder = { version = "0.8.0", path = "../block-builder" }
tp-block-builder = { version = "2.0.0", path = "../../primitives/block-builder" }
tc-informant = { version = "0.8.0", path = "../informant" }
tc-telemetry = { version = "2.0.0", path = "../telemetry" }
tc-offchain = { version = "2.0.0", path = "../offchain" }
prometheus-endpoint = { package = "tetcore-prometheus-endpoint", path = "../../utils/prometheus", version = "0.8.0"}
tc-tracing = { version = "2.0.0", path = "../tracing" }
tp-tracing = { version = "2.0.0", path = "../../primitives/tracing" }
tracing = "0.1.22"
tracing-futures = { version = "0.2.4" }
tetsy-util-mem = { version = "0.9.0", default-features = false, features = ["tetsy-primitive-types"] }

[target.'cfg(not(target_os = "unknown"))'.dependencies]
tempfile = "3.1.0"
directories = "3.0.1"

[dev-dependencies]
tetcore-test-runtime-client = { version = "2.0.0", path = "../../test-utils/runtime/client" }
tetcore-test-runtime = { version = "2.0.0", path = "../../test-utils/runtime/" }
tp-consensus-babe = { version = "0.8.0", path = "../../primitives/consensus/babe" }
grandpa = { version = "0.8.0", package = "tc-finality-grandpa", path = "../finality-grandpa" }
grandpa-primitives = { version = "2.0.0", package = "tp-finality-grandpa", path = "../../primitives/finality-grandpa" }
tokio = { version = "0.2", default-features = false }
async-std = { version = "1.6.5", default-features = false }
